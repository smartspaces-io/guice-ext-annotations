buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
}

plugins {
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'ru.vyarus.java-lib' version '1.1.2'
    id 'ru.vyarus.github-info' version '1.1.0'
    id 'ru.vyarus.animalsniffer' version '1.4.6'
    id 'ru.vyarus.quality' version '3.3.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'net.researchgate.release' version '2.7.0'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'biz.aQute.bnd.builder'  version "4.2.0"
}

sourceCompatibility = 1.6

wrapper {
    gradleVersion = '4.8.1'
}

repositories { jcenter(); mavenCentral(); mavenLocal() }
dependencies {
    signature 'org.codehaus.mojo.signature:java16:1.1@signature'

    compile 'com.google.inject:guice:4.2.2'
    compile 'org.slf4j:slf4j-api:1.7.21'
    optional 'org.javassist:javassist:3.16.1-GA'

    testCompile 'junit:junit:4.12'
    testCompile 'org.slf4j:slf4j-nop:1.7.21'
}

group = 'ru.vyarus'
description = 'Guice annotations extensions'

github {
    user = 'xvik'
    license = 'MIT'
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = 'xvik'
        name = project.name
        desc = project.description
        labels = ['guice', 'slf4j', 'jsr250']
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = findProperty('gpgPassphrase')
            }
            mavenCentralSync {
                sync = true
                user = findProperty('sonatypeUser')
                password = findProperty('sonatypePassword')
            }
        }
    }
}

afterReleaseBuild {
    dependsOn = [bintrayUpload]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed', 'standard_error'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true


task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
        'Generates dependencies tree report and opens it in browser') {
    doLast {
        java.awt.Desktop.getDesktop().open(file('build/reports/project/dependencies/root.html'))
    }
}

jar {
  bnd """
    Export-Package: \\
      ru.vyarus.guice.ext.*

    Import-Package: \\
      javassist.*;resolution:="optional", \\
      org.slf4j.*;resolution:="optional", \\
      *
  """
}
